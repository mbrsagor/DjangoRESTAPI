from core.models.base import BaseEntityfrom django.db import modelsclass Category(BaseEntity):    name = models.CharField(max_length=50)    parent = models.ForeignKey('self', on_delete=models.CASCADE, blank=True, null=True, default=None)    class Meta:        ordering = ['-id']    def __str__(self):        return self.name    def get_children(self):        return Category.objects.filter(parent=self)    def children_count(self):        return Category.objects.filter(parent=self).count()class Product(BaseEntity):    name = models.CharField(max_length=120)    description = models.TextField(blank=True)    category = models.ForeignKey(Category, on_delete=models.CASCADE, related_name='product_category')    price = models.IntegerField(default=1)    discount_price = models.IntegerField(default=0)    product_image = models.ImageField(upload_to='product/%y/%m/%d', blank=True, null=True)    def __str__(self):        return self.name    @property    def calculate_current_price(self):        return self.price - self.discount_price